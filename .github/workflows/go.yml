name: Knox CI

permissions: read-all

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.24

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Check formatting
        run: |
          gofmt -w .
          unformatted=$(gofmt -l .)
          if [ -n "$unformatted" ]; then
            echo "Unformatted files:"
            echo "$unformatted"
            exit 1
          fi

      - name: Vet
        run: go vet ./...

  integration_test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.24

      - name: Install dependencies
        run: go mod download

      - name: Start Knox server with debug
        run: |
          # Start server with debug output
          go run ./cmd/dev_server -http :8080 -https :9000 -debug > knox_server.log 2>&1 &
          echo $! > server.pid
          
          # Wait for server to start (max 30 seconds)
          timeout 30 bash -c 'until curl -k -s -o /dev/null https://localhost:9000/healthcheck; do sleep 1; done' || \
            (echo "Server failed to start"; cat knox_server.log; exit 1)
          
          # Show server status
          cat knox_server.log
          netstat -tulnp | grep -E '8080|9000' || true

      - name: Verify server health
        run: |
          curl -k -v https://localhost:9000/healthcheck

      - name: Run security tests
        run: |
          # Test authentication requirement
          if ! curl -k -v https://localhost:9000/normal/path 2>&1 | grep -q "401 Unauthorized"; then
            echo "Auth test failed - expected 401 Unauthorized"
            exit 1
          fi
          
          # Test path traversal protection
          if ! curl -k -v https://localhost:9000/../../../etc/passwd 2>&1 | grep -q "404 Not Found"; then
            echo "Path traversal test failed - expected 404 Not Found"
            exit 1
          fi

      - name: Stop server
        if: always()
        run: |
          kill $(cat server.pid) || true
          sleep 1

      - name: Upload server logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: knox_server_logs
          path: knox_server.log